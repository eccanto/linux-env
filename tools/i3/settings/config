set $mod Mod4

new_window pixel 1
new_float normal

hide_edge_borders none

font xft:URWGothic-Book 9

floating_modifier $mod

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# start applications
bindsym Print exec flameshot gui
bindsym $mod+Escape exec ~/.config/polybar/scripts/powermenu_alt
bindsym $mod+Return exec alacritty -e bash -c "tmux new-session '/usr/bin/neofetch && /usr/bin/zsh'"
bindsym $mod+e exec alacritty --class floating -e bash -c "VISUAL=vim EDITOR=vim ranger"
bindsym $mod+Shift+d exec rofi -show run -display-run "ï’µ search"
bindsym $mod+d exec dmenu_recency -nb "#1F1F1F" -nf "#C0C0C0" -sb "#2180DE" -sf "#000000" -h 26 -y 6

# lock screen
bindsym $mod+l exec lock

# Window kill command
bindsym $mod+Shift+q kill

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# move between windows
bindsym $mod+Tab exec i3_tab_switcher --mode "tab"
bindsym $mod+Shift+Tab exec i3_tab_switcher --mode "group"

# split orientation
bindsym $mod+s mode "$split_mode"
set $split_mode split: (h)orizontal, (v)ertical, to(g)gle
mode "$split_mode" {
    bindsym h split h; exec notify-send 'split horizontal'; mode "default"
    bindsym v split v; exec notify-send 'split vertical'; mode "default"
    bindsym g split toggle; exec notify-send 'split toggle'; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# container layout
bindsym $mod+y mode "$layout_mode"
set $layout_mode layout: (s)tacking, (t)abbed, to(g)gle
mode "$layout_mode" {
    bindsym s layout stacking; mode "default"
    bindsym t layout tabbed; mode "default"
    bindsym g layout toggle split; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# window options
bindsym $mod+w mode "$window_mode"
set $window_mode window: (w)indow mode, stic(k)y, (h)hide to scratchpad, scratchpad (s)how, (f)ocus parent
mode "$window_mode" {
    bindsym w split v; layout tabbed; mode "default"
    bindsym k sticky toggle; mode "default"
    bindsym h move scratchpad; mode "default"
    bindsym s scratchpad show; mode "default"
    bindsym f focus parent; mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# restore worksapces
bindsym $mod+Shift+s mode "save"
mode "save" {
  bindsym 1 exec i3-resurrect save -w 1; mode "default"
  bindsym 2 exec i3-resurrect save -w 2; mode "default"
  bindsym 3 exec i3-resurrect save -w 3; mode "default"
  bindsym 4 exec i3-resurrect save -w 4; mode "default"
  bindsym 5 exec i3-resurrect save -w 5; mode "default"
  bindsym 6 exec i3-resurrect save -w 6; mode "default"
  bindsym 7 exec i3-resurrect save -w 7; mode "default"
  bindsym 8 exec i3-resurrect save -w 8; mode "default"
  bindsym 9 exec i3-resurrect save -w 9; mode "default"
  bindsym 0 exec i3-resurrect save -w 0; mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+Shift+n mode "restore"
mode "restore" {
  bindsym 1 exec i3-resurrect restore -w 1; mode "default"
  bindsym 2 exec i3-resurrect restore -w 2; mode "default"
  bindsym 3 exec i3-resurrect restore -w 3; mode "default"
  bindsym 4 exec i3-resurrect restore -w 4; mode "default"
  bindsym 5 exec i3-resurrect restore -w 5; mode "default"
  bindsym 6 exec i3-resurrect restore -w 6; mode "default"
  bindsym 7 exec i3-resurrect restore -w 7; mode "default"
  bindsym 8 exec i3-resurrect restore -w 8; mode "default"
  bindsym 9 exec i3-resurrect restore -w 9; mode "default"
  bindsym 0 exec i3-resurrect restore -w 0; mode "default"

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move focused workspace between monitors
bindsym $mod+Ctrl+Shift+Left move workspace to output Left
bindsym $mod+Ctrl+Shift+Down move workspace to output down
bindsym $mod+Ctrl+Shift+Up move workspace to output up
bindsym $mod+Ctrl+Shift+Right move workspace to output right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# workspaces
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

workspace 1 output HDMI-2
workspace 2 output DP-1

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# applications window mode
for_window [class=".*"] border pixel 2
for_window [class="feh"] floating enable
for_window [class="Arandr"] floating enable
for_window [class="Gucharmap"] floating enable
for_window [class="Gnome-calculator"] floating enable
for_window [class="kcalc"] floating enable
for_window [class="GParted"] floating enable border normal
for_window [instance="floating"] floating enable border pixel 2
for_window [instance="floating"] resize grow left 280, resize grow right 280, resize grow down 0, resize grow up 0

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec lock
    bindsym s exec lock && systemctl suspend
    bindsym e exec i3 exit logout
    bindsym h exec systemctl hibernate
    bindsym r exec systemctl reboot
    bindsym Shift+s exec systemctl poweroff

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window
bindsym $mod+r mode "resize"
mode "resize" {
    bindsym h resize shrink width 2 px or 2 ppt
    bindsym j resize grow height 2 px or 2 ppt
    bindsym k resize shrink height 2 px or 2 ppt
    bindsym l resize grow width 2 px or 2 ppt

    bindsym Left resize shrink width 5 px or 5 ppt
    bindsym Down resize grow height 5 px or 5 ppt
    bindsym Up resize shrink height 5 px or 5 ppt
    bindsym Right resize grow width 5 px or 5 ppt

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# autostart applications
exec_always --no-startup-id bash ~/.screenlayout/home.sh
exec_always --no-startup-id feh --bg-fill ~/.wallpaper.jpg
exec_always --no-startup-id ~/.config/polybar/i3wmthemer_bar_launch.sh
exec_always --no-startup-id bash -c "pkill conky; conky -d -c ~/.config/conky/general.lua"

# theme
client.background #1E272B
client.focused #2180DE #000000 #D0D0D0 #2180DE #2180DE
client.focused_inactive #7D7D7D #000000 #2180DE #2180DE #484848
client.unfocused #5C5C5C #000000 #A6A6A6 #78824B #2C2C2C
client.urgent #2180DE #000000 #D0D0D0 #2180DE #2180DE
client.placeholder #EAD49B #1E272B #EAD49B #78824B #78824B

smart_gaps off
gaps inner 10
gaps outer 0
gaps top 28

# volume controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl -- set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMute exec --no-startup-id pactl -- set-sink-mute @DEFAULT_SINK@ toggle

# touchpad on and off controller on laptop with Fn+<touchpad control functional key>
bindsym XF86TouchpadOn exec --no-startup-id synclient Touchpadoff=0
bindsym XF86TouchpadOff exec --no-startup-id synclient Touchpadoff=1

# player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 2
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 2
